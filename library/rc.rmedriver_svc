#! /bin/sh
# Copyright (c) 2005 Meilhaus Electronic GmbH
# All rights reserved.
#
# Author: Guenter Gebhardt <g.gebhardt@meilhaus.de>
#
# /etc/init.d/rmedriver_svc
#   and its symbolic link
# /usr/sbin/rcrmedriver_svc
#
# System startup script for daemon rmedriver_svc
#
# LSB compatible service control script; see http://www.linuxbase.org/spec/
# 
#
### BEGIN INIT INFO
# Provides:          rmedriver_svc
# Required-Start:    $network $syslog medriverPCI  medriverUSB
# X-UnitedLinux-Should-Start:
# Required-Stop:     $network $syslog medriverPCI  medriverUSB
# X-UnitedLinux-Should-Stop:
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: rmedriver_svc daemon providing remote service to the ME-iDS
# Description:       Start rmedriver_svc to allow remote access to the ME-iDS
### END INIT INFO
# 
#
# Note on runlevels: 
# 0 - halt/poweroff 					6 - reboot
# 1 - single user						2 - multiuser without network exported
# 3 - multiuser w/ network (text mode)  5 - multiuser w/ network and X11 (xdm)


# Check for missing binaries (stale symlinks should not happen)
MEDRIVER_SVC_BIN=/usr/sbin/rmedriver_svc
test -x $MEDRIVER_SVC_BIN || exit 5

# Check for existence of needed config file and read it
#MEDRIVER_SVC_CONFIG=/etc/sysconfig/rmedriver_svc
#test -r $MEDRIVER_SVC_CONFIG || exit 6
#. $MEDRIVER_SVC_CONFIG

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_status -s     display "skipped" and exit with status 3
#      rc_status -u     display "unused" and exit with status 3
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
#      rc_active	checks whether a service is activated by symlinks
#      rc_splash arg    sets the boot splash screen to arg (if active)
. /etc/rc.status

# Reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0	      - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.

case "$1" in
    start)
	echo -n "Starting rmedriver_svc "
	## Start daemon with startproc(8). If this fails
	## the return value is set appropriately by startproc.
	startproc $MEDRIVER_SVC_BIN

	# Remember status and be verbose
	rc_status -v
	;;
    stop)
	echo -n "Shutting down rmedriver_svc "
	## Stop daemon with killproc(8) and if this fails
	## killproc sets the return value according to LSB.

	killproc -TERM $MEDRIVER_SVC_BIN

	# Remember status and be verbose
	rc_status -v
	;;
    try-restart)
	## Do a restart only if the service was active before.
	## Note: try-restart is not (yet) part of LSB (as of 1.2)
	$0 status >/dev/null &&  $0 restart

	# Remember status and be quiet
	rc_status
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start

	# Remember status and be quiet
	rc_status
	;;
    force-reload)
	$0 stop  &&  $0 start
	rc_status
	;;
    reload)
	rc_failed 3
	rc_status -v
	;;
    status)
	echo -n "Checking for service rmedriver_svc "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Return value is slightly different for the status command:
	# 0 - service up and running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running (unused)
	# 4 - service status unknown :-(
	# 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)
	
	# NOTE: checkproc returns LSB compliant status values.
	checkproc $MEDRIVER_SVC_BIN
	# NOTE: rc_status knows that we called this init script with
	# "status" option and adapts its messages accordingly.
	rc_status -v
	;;
    probe)
	## Optional: Probe for the necessity of a reload, print out the
	## argument to this init script which is required for a reload.
	## Note: probe is not (yet) part of LSB (as of 1.2)

	test /etc/MEDRIVER_SVC/MEDRIVER_SVC.conf -nt /var/run/MEDRIVER_SVC.pid && echo reload
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
	exit 1
	;;
esac
rc_exit
